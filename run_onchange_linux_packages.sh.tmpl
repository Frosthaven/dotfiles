{{ if eq .chezmoi.os "linux" -}}

#!/bin/bash

# FILEHASH ********************************************************************
# *****************************************************************************

# by embedding the file hash into this template, chezmoi will only detect
# changes if the hashed file changes. This will prevent unnecessarily running
# the script when the target file hasn't changed.

fileHash=$(sha256sum "$HOME/.local/share/chezmoi/.chezmoidata/packages.yaml" | awk '{print $1}')

# SCRIPT **********************************************************************
# *****************************************************************************

sudo -v

# Detect package manager
if command -v pacman &>/dev/null; then
    pkgmgr="pac"
    fileHash=$(sha256sum "$HOME/.local/share/chezmoi/.chezmoidata/packages.yaml" | awk '{print $1}')
elif command -v apt &>/dev/null; then
    pkgmgr="apt"
    fileHash=$(shasum -a 256 "$HOME/.local/share/chezmoi/.chezmoidata/packages.yaml")
else
    echo "‚ùå Unsupported package manager."
    exit 1
fi

echo ""
if read -r -p "Do you want to install packages? (N/y) " REPLY && [[ ! "$REPLY" =~ ^[Yy]$ ]]; then
    echo "$REPLY"
    echo "Skipping package installation."
    exit
fi

totalPackages=0
currentPackage=0

# Count total packages for detected pkgmgr
{{- range $key, $value := .packages }}
  {{- if or (index $value "pac") (index $value "apt") }}
    totalPackages=$((totalPackages + 1))
  {{- end }}
{{- end }}

echo ""
echo "Processing $totalPackages packages with '${pkgmgr}'..."
echo ""

{{- range $key, $value := .packages }}

case "$pkgmgr" in
  pac)
    {{- with index $value "pac" }}
    currentPackage=$((currentPackage + 1))
    echo -e "\033[35m----- [$currentPackage/$totalPackages] {{$key}} -----\033[0m"
    {{ . }}
    {{- end }}
    ;;
  apt)
    {{- with index $value "apt" }}
    currentPackage=$((currentPackage + 1))
    echo -e "\033[35m----- [$currentPackage/$totalPackages] {{$key}} -----\033[0m"
    {{ . }}
    {{- end }}
    ;;
esac

{{- end }}

echo ""
echo "Done!"

{{ end -}}

