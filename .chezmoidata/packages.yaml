packages:
    # fonts *******************************************************************
    # *************************************************************************

    font-jetbrains-mono:
        win: winget install --id DEVCOM.JetBrainsMonoNerdFont
        mac: brew install --cask font-jetbrains-mono-nerd-font
        lin: # n/a

    # package managers ********************************************************
    # *************************************************************************

    1-package-manager-uv: # universal package manager
        win: winget install --id astral-sh.uv
        mac: brew install uv
        lin: # n/a
    1-package-manager-fnm: # node version manager + same-shell setup
        win: winget install --id Schniz.fnm; if (-not $env:FNM_DIR) { $output = (fnm env | Out-String).Trim(); Invoke-Expression $output; if (-not (Get-Command node -ErrorAction SilentlyContinue)) { fnm install --lts; fnm use lts-latest } }
        mac: '[[ -z "$FNM_DIR" ]] && brew install fnm && output=$(fnm env) && eval "$output" && (! command -v node &>/dev/null) && fnm install --lts && fnm use lts-latest'
        lin: # n/a
    1-package-manager-mas: # mac app store cli
        win: # n/a
        mac: brew install mas
        lin: # n/a

    # programming languages ***************************************************
    # *************************************************************************

    2-language-zig: # needed to auto-compile telescope in neovim cross-platform
        win: winget install --id zig.zig
        mac: brew install zig
        lin: # n/a
    2-language-rust:
        win: winget install --id Rustlang.Rust.GNU
        mac: brew install rust
        lin: # n/a
    2-language-python:
        win: winget install --id Python.Python.3.11
        mac: brew install python
        lin: # n/a
    2-language-go:
        win: winget install --id GoLang.Go
        mac: brew install go
        lin: # n/a
    2-language-php:
        win: winget install --id PHP.PHP.8.4
        mac: brew install php
        lin: # n/a

    # terminal emulators ******************************************************
    # *************************************************************************

    terminal-wezterm:
        win: winget install --id wez.wezterm
        mac: brew install wezterm
        lin: # n/a

    # shells ******************************************************************
    # *************************************************************************

    shell-powershell:
        win: winget install --id Microsoft.PowerShell
        mac: brew install powershell
        lin: # n/a
    shell-clink: # spices up cmd.exe
        win: winget install --id chrisant996.Clink
        mac: # n/a
        lin: # n/a
    shell-nushell: # structured data, used as sidekick
        win: winget install --id Nushell.Nushell
        mac: brew install nushell
        lin: # n/a
    shell-carapace: # shell autocomplete
        win: winget install --id rsteube.Carapace
        mac: brew install carapace
        lin: # n/a
    shell-starship: # prompt
        win: winget install --id Starship.Starship
        mac: brew install starship
        lin: # n/a

    # command line tools ******************************************************
    # *************************************************************************

    cli-composer:
        win: if (-not (Get-Command composer -ErrorAction SilentlyContinue)) { Invoke-WebRequest -Uri https://getcomposer.org/Composer-Setup.exe -OutFile Composer-Setup.exe; Start-Process -Wait -FilePath Composer-Setup.exe }
        mac: brew install composer
        lin: # n/a
    cli-git:
        win: winget install --id Git.Git
        mac: brew install git
        lin: # n/a
    cli-yazi:
        win: winget install --id sxyazi.yazi
        mac: brew install yazi
        lin: # n/a
    cli-neovim: # text editor
        win: winget install --id Neovim.Neovim
        mac: brew install neovim
        lin: # n/a
    cli-ripgrep: # search tool
        win: winget install --id BurntSushi.ripgrep.MSVC
        mac: brew install ripgrep
        lin: # n/a
    cli-fzf: # fuzzy finder
        win: winget install --id junegunn.fzf
        mac: brew install fzf
        lin: # n/a
    cli-fd: # alternative to find
        win: winget install --id sharkdp.fd
        mac: brew install fd
        lin: # n/a
    cli-bat: # alternative to cat
        win: winget install --id sharkdp.bat
        mac: brew install bat
        lin: # n/a
    cli-jq: # json processor
        win: winget install --id jqlang.jq
        mac: brew install jq
        lin: # n/a
    cli-yq: # yaml processor
        win: winget install --id MikeFarah.yq
        mac: brew install yq
        lin: # n/a
    cli-eza: # alternative to ls
        win: winget install --id eza-community.eza
        mac: brew install eza
        lin: # n/a
    cli-zoxide: # alternative to cd (has jumping)
        win: winget install --id ajeetdsouza.zoxide
        mac: brew install zoxide
        lin: # n/a
    cli-duf: # alternative to du
        win: winget install --id muesli.duf
        mac: brew install duf
        lin: # n/a
    cli-tokei: # code line counter
        win: winget install --id XAMPPRocky.tokei
        mac: brew install tokei
        lin: # n/a
    cli-stripe-cli: # stripe cli
        win: winget install --id Stripe.StripeCli
        mac: brew install stripe-cli
        lin: # n/a
    cli-posting: # api tool
        win: uv tool install --python 3.12 posting
        mac: uv tool install --python 3.12 posting
        lin: # n/a
    cli-mkdocs:
        win: uv tool install --python 3.12 mkdocs-material
        mac: uv tool install --python 3.12 mkdocs-material
        lin: # n/a
    cli-prettier:
        win: npm install --global prettier
        mac: npm install --global prettier
        lin: # n/a

    # container management ****************************************************
    # *************************************************************************

    containers-docker:
        win: winget install --id Docker.DockerDesktop
        mac: # n/a
        lin: # n/a
    containers-orbstack: # alternative to docker on mac
        win: # n/a
        mac: brew install --cask orbstack
        lin: # n/a
    containers-ddev: # local development container management
        win: winget install --id DDEVFoundation.DDEV
        mac: brew install ddev/ddev/ddev; mkcert -install;
        lin: # n/a

    # desktop window management ***********************************************
    # *************************************************************************

    window-management-komorebi:
        win: winget install --id LGUG2Z.komorebi
        mac: # n/a
        lin: # n/a
    window-management-aerospace:
        win: # n/a
        mac: brew install nikitabobko/tap/aerospace
        lin: # n/a
    window-management-aeroplace:
        win: # n/a
        mac: brew tap frosthaven/aeroplace; brew install aeroplace;
        lin: # n/a
    window-management-borders:
        win: # n/a
        mac: brew tap FelixKratz/formulae; brew install borders;
        lin: # n/a
    window-management-sketchybar:
        win: # n/a
        mac: brew tap FelixKratz/formulae; brew install sketchybar;
        lin: # n/a
    window-management-wallpaper:
        win: # n/a
        mac: brew install wallpaper;
        lin: # n/a

    # desktop toys ************************************************************
    # *************************************************************************
    # toys are small applications that have a single purpose, often living in
    # the system tray

    toy-bitwarden: # password manager
        win: winget install --id Bitwarden.Bitwarden
        mac: brew install bitwarden
        lin: # n/a
    toy-everything: # search tool
        win: winget install --id voidtools.Everything
        mac: # n/a
        lin: # n/a
    toy-flow-launcher: # launcher
        win: winget install --id Flow-Launcher.Flow-Launcher
        mac: # n/a
        lin: # n/a
    toy-keka: # archive manager
        win: # n/a
        mac: brew install keka
        lin: # n/a
    toy-raycast: # launcher
        win: # n/a
        mac: brew install raycast
        lin: # n/a
    toy-cursorcerer: # cursor manager
        win: # n/a
        mac: brew install cursorcerer
        lin: # n/a
    toy-logitune: # logitech mouse manager
        win: # n/a
        mac: brew install logitune
        lin: # n/a
    toy-logi-options-plus: # logitech mouse manager
        win: winget install --id Logitech.OptionsPlus
        mac: brew install logi-options-plus
        lin: # n/a
    toy-logi-g-hub: # logitech mouse manager
        win: winget install --id Logitech.GHUB
        mac: brew install --cask logitech-g-hub
        lin: # n/a
    toy-paragon-ntfs: # ntfs driver
        win: # n/a
        mac: brew install paragon-ntfs
        lin: # n/a
    toy-bartender: # menu bar manager
        win: # n/a
        mac: brew install bartender
        lin: # n/a
    toy-cleanshot: # screen capture
        win: # n/a
        mac: brew install cleanshot
        lin: # n/a
    toy-amphetamine: # keep mac awake
        win: # n/a
        mac: mas install 937984704
        lin: # n/a
    toy-colorslurp: # color picker
        win: # n/a
        mac: mas install 1287239339
        lin: # n/a
    toy-rainmeter: # desktop customization
        win: winget install --id Rainmeter.Rainmeter
        mac: # n/a
        lin: # n/a
    toy-nanazip: # archive manager
        win: winget install --id M2Team.NanaZip
        mac: # n/a
        lin: # n/a
    toy-sharex: # screen capture
        win: winget install --id ShareX.ShareX
        mac: # n/a
        lin: # n/a
    toy-hwinfo: # system monitor
        win: winget install --id REALiX.HWiNFO
        mac: # n/a
        lin: # n/a
    toy-powertoys: # system utilities
        win: winget install --id Microsoft.PowerToys
        mac: # n/a
        lin: # n/a
    toy-macrium-reflect: # backup
        win: echo "WARNING Cannot automatically install - Install from https://www.macrium.com/reflectfree"
        mac: # n/a
        lin: # n/a
    toy-istat-menus: # system monitor
        win: # n/a
        mac: brew install istat-menus
        lin: # n/a
    toy-jettison:
        win: # n/a
        mac: brew install jettison
        lin: # n/a
    toy-pixelsnap:
        win: # n/a
        mac: brew install pixelsnap
        lin: # n/a

    # desktop applications ****************************************************
    # *************************************************************************

    desktop-adobe-creative-cloud: # creative suite
        win: winget install --id Adobe.CreativeCloud
        mac: brew install adobe-creative-cloud
        lin: # n/a
    desktop-microsoft-office: # office suite
        win: winget install --id Microsoft.Office
        mac: brew install microsoft-office
        lin: # n/a
    desktop-jetbrains-toolbox: # jetbrains suite
        win: winget install --id JetBrains.Toolbox
        mac: brew install jetbrains-toolbox
        lin: # n/a
    desktop-obsidian: # note taking
        win: winget install --id Obsidian.Obsidian
        mac: brew install obsidian
        lin: # n/a
    desktop-sublime-text:
        win: winget install --id SublimeHQ.SublimeText.4 --include-unknown
        mac: brew install sublime-text
        lin: # n/a
    desktop-local-send: # file sharing
        win: winget install --id LocalSend.LocalSend
        mac: brew install --cask localsend
        lin: # n/a
    desktop-discord: # chat
        win: winget install --id Discord.Discord
        mac: brew install discord
        lin: # n/a
    desktop-slack: # chat
        win: winget install --id SlackTechnologies.Slack
        mac: brew install slack
        lin: # n/a
    desktop-spotify: # music
        win: winget install --id Spotify.Spotify
        mac: brew install spotify
        lin: # n/a
    desktop-zoom:
        win: winget install --id Zoom.Zoom
        mac: brew install zoom
        lin: # n/a
    desktop-obs:
        win: winget install --id OBSProject.OBSStudio
        mac: brew install obs
        lin: # n/a
    desktop-web-browser:
        win: winget install --id Microsoft.Edge
        mac: brew install microsoft-edge
        lin: # n/a
    desktop-files-sftp:
        win: winget install --id WinSCP.WinSCP
        mac: brew install forklift; defaults write -g NSFileViewer -string com.binarynights.ForkLift; defaults write com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers -array-add '{LSHandlerContentType="public.folder";LSHandlerRoleAll="com.binarynights.ForkLift";}'
        lin: # n/a
    desktop-qbittorrent:
        win: winget install --id qBittorrent.qBittorrent
        mac: brew install qbittorrent
        lin: # n/a
    desktop-database-manager:
        win: winget install --id DBeaver.DBeaver
        mac: brew install --cask dbeaver-community
        lin: # n/a
    desktop-video-player:
        win: winget install screenbox -s winget
        mac: brew install iina
        lin: # n/a
