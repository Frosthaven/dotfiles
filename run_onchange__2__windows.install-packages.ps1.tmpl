{{ if eq .chezmoi.os "windows" -}}

# ENSURE ADMINISTRATOR PRIVILEGES *********************************************
# *****************************************************************************

# this script requires administrator privileges to install packages. If the
# script is not running as an administrator, restart the script with elevated
# privileges.

if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Start-Process -FilePath powershell -ArgumentList "-File", "$PSCommandPath" -Verb RunAs -Wait
    exit
}

# FILEHASH ********************************************************************
# *****************************************************************************

# by embedding the file hash into this template, chezmoi will only detect
# changes if the hashed file changes. This will prevent unnecessarily running
# the script when the target file hasn't changed.

$fileHash = CertUtil -hashfile "$HOME/.local/share/.chezmoidata/packages.yaml" SHA256

# SCRIPT **********************************************************************
# *****************************************************************************

$installPackages = $false
Read-Host -Prompt "Install Packages? (y/n)" | ForEach-Object {
    if ($_ -eq 'n') {
        echo "Skipping package installation."
        Read-Host -Prompt "Press Enter to exit"
        exit
    }
}

$totalPackages = {{ .packages | len }};
$currentPackage = 0;
echo "Processing $totalPackages Packages..."
echo ""
{{ range .packages -}}
    $currentPackage++;
    {{ if .win -}}
        echo "----- [$currentPackage/$totalPackages] {{ .win }}"
        {{ .win }}
    {{ end -}}
{{ end -}}

echo ""
Read-Host -Prompt "Done! Press Enter to exit the package installer."

{{ end -}}

